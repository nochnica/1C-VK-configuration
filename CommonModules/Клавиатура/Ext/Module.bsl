
Функция СформироватьКлавиатуру(payload = Неопределено, from_id = "", msg = "") Экспорт 
	ДанныеВозврата = Новый Структура;
	ТекстПриветствия = Константы.ТекстПриветствия.Получить();   
	message = ?(ЗначениеЗаполнено(ТекстПриветствия), ТекстПриветствия, "Default text");
	buttons = СформироватьГлавноеМеню(from_id);  
		
	Если payload <> Неопределено Тогда 
		Если payload = "catalog" Тогда
			ВыбранныеВиды = Каталог.ПолучитьВидыНоменклатуры();
			Если ВыбранныеВиды.Количество() <= 1 Тогда
				message = "Выберите товар из каталога:";
				СтрКарусели = Каталог.СформироватьСписокТоваров(ВыбранныеВиды[0].Наименование);
		    	ДанныеВозврата.Вставить("template", СтрКарусели);
			Иначе
				message = "Выберите категорию:";
				buttons = СформироватьМенюВыбораКатегории(ВыбранныеВиды); 
				ДанныеВозврата.Вставить("keyboard", ФункцииJSON.СформироватьJSONКлавиатуры(buttons, true));
			КонецЕсли;
			
		    //message = "Выберите товар:"; 
			//СтрКарусели = Каталог.СформироватьСписокТоваров();
		    //ДанныеВозврата.Вставить("template", СтрКарусели); 
		ИначеЕсли payload = "cart" Тогда
			message = Корзина.ПолучитьТекстКорзины(from_id);  
			buttons = СформироватьМенюКорзины(message);
			ДанныеВозврата.Вставить("keyboard", ФункцииJSON.СформироватьJSONКлавиатуры(buttons, true));
		ИначеЕсли payload = "FAQ" Тогда
			ТекстFAQ = Константы.ТекстFAQ.Получить();   
			message = ?(ЗначениеЗаполнено(ТекстFAQ), ТекстFAQ, "FAQ text"); 
			ДанныеВозврата.Вставить("keyboard", ФункцииJSON.СформироватьJSONКлавиатуры(buttons, true));
		ИначеЕсли payload = "order" Тогда
			message =  "Введите email:"; 
			СостоянияEmail.ОжиданиеEmail(from_id); 
			ДанныеВозврата.Вставить("keyboard", ФункцииJSON.СформироватьJSONКлавиатуры(buttons));  
		ИначеЕсли payload = "clearCart" Тогда   
			Заказы.ОчиститьКорзину(from_id);
			message = Корзина.ПолучитьТекстКорзины(from_id); 
			buttons = СформироватьМенюКорзины(message);
			ДанныеВозврата.Вставить("keyboard", ФункцииJSON.СформироватьJSONКлавиатуры(buttons, true));
		ИначеЕсли payload = "orders" Тогда
			message = Заказы.ПолучитьТекстЗаказов(from_id); 
			ДанныеВозврата.Вставить("keyboard", ФункцииJSON.СформироватьJSONКлавиатуры(buttons));
		ИначеЕсли payload <> "back" Тогда 
			message  = "Выберите товар из «" + payload + "»:";
			template = Каталог.СформироватьСписокТоваров(payload);
			ДанныеВозврата.Вставить("template", template);     
			ДанныеВозврата.Вставить("keyboard", ФункцииJSON.СформироватьJSONКлавиатуры(buttons, true)); 
		Иначе	     
			ДанныеВозврата.Вставить("keyboard", ФункцииJSON.СформироватьJSONКлавиатуры(buttons, true)); 	
		КонецЕсли;
	Иначе     
		Ссылка = Справочники.СостоянияПользователей.НайтиПоРеквизиту("Пользователь", Строка(from_id));
		//ДанныеВозврата.Вставить("keyboard", ФункцииJSON.СформироватьJSONКлавиатуры(buttons, true));

		Если ЗначениеЗаполнено(Ссылка) Тогда
			Состояние = Ссылка.ПолучитьОбъект(); 
			ПолученВалидныйEmail = СостоянияEmail.ПроверитьEmail(msg); 
			Если Состояние.Ожидаем И ПолученВалидныйEmail Тогда
				message = "Спасибо, мы свяжемся с вами по email!";
				СостоянияEmail.ОжиданиеEmail(from_id, msg);    
				ДанныеВозврата.Вставить("keyboard", ФункцииJSON.СформироватьJSONКлавиатуры(buttons, true));
			ИначеЕсли Не ПолученВалидныйEmail Тогда
				message = "Некорректный email! Email должен быть вида name@domain.tld."; 
				ДанныеВозврата.Вставить("keyboard", ФункцииJSON.СформироватьJSONКлавиатуры(buttons));
			КонецЕсли; 
		Иначе     
			ДанныеВозврата.Вставить("keyboard", ФункцииJSON.СформироватьJSONКлавиатуры(buttons, true));
        КонецЕсли;
			
   	КонецЕсли;                        
	
	//ДанныеВозврата.Вставить("keyboard", ФункцииJSON.СформироватьJSONКлавиатуры(buttons, true));
	ДанныеВозврата.Вставить("message", message);
	
	Возврат ДанныеВозврата;

КонецФункции    

Функция СформироватьГлавноеМеню(from_id = "")
	buttons = Новый Массив; 
	
	РядКнопок = Новый Массив;
	РядКнопок.Добавить(СформироватьКнопку("Каталог", "catalog", 1));
	buttons.Добавить(РядКнопок); 
	
	РядКнопок = Новый Массив;
	РядКнопок.Добавить(СформироватьКнопку("Корзина", "cart", 1));
	buttons.Добавить(РядКнопок); 
	
	РядКнопок = Новый Массив;
	РядКнопок.Добавить(СформироватьКнопку("FAQ", "FAQ", 1));
	buttons.Добавить(РядКнопок);
	
	РядКнопок = Новый Массив;
	РядКнопок.Добавить(СформироватьКнопку("Заказы", "orders", 1));
	buttons.Добавить(РядКнопок);  
	
	//hash = "action=transfer-to-group&group_id=230152621&aid=53447325";
	//РядКнопок = Новый Массив;
	//РядКнопок.Добавить(СформироватьКнопку(, "payment", ,, "vkpay", hash));
	//buttons.Добавить(РядКнопок);
	
	Возврат buttons;
КонецФункции    

Функция СформироватьМенюКорзины(message = "Ваша корзина пуста.")
	buttons = Новый Массив; 
	Если message <> "Ваша корзина пуста." Тогда 
		РядКнопок = Новый Массив;
		РядКнопок.Добавить(СформироватьКнопку("Оформить заказ", "order", 2));
		buttons.Добавить(РядКнопок);   
	
		РядКнопок = Новый Массив;
		РядКнопок.Добавить(СформироватьКнопку("Очистить корзину", "clearCart", 2));
		buttons.Добавить(РядКнопок); 
	КонецЕсли;

	РядКнопок = Новый Массив;
	РядКнопок.Добавить(СформироватьКнопку("Назад", "back", 2));
	buttons.Добавить(РядКнопок); 
	
	Возврат buttons;
	
КонецФункции 

Функция СформироватьМенюВыбораКатегории(ВыбранныеВиды)
	buttons = Новый Массив; 
	
	Для каждого Вид из ВыбранныеВиды Цикл
		РядКнопок = Новый Массив;
		РядКнопок.Добавить(СформироватьКнопку(Вид.Наименование, Вид.Наименование, 2));
		buttons.Добавить(РядКнопок);
	КонецЦикла;
	
	//РядКнопок = Новый Массив;
	//РядКнопок.Добавить(СформироватьКнопку("Назад", "back", 2));
	//buttons.Добавить(РядКнопок);
	
	Возврат buttons;
КонецФункции 

Функция СформироватьКнопку(label = "Test", payload_button = "", payload_level = "", color = "default", type = "text", hash = Неопределено)
    СтруктураPayload = Новый Структура;
	СтруктураPayload.Вставить("button", payload_button);
	СтруктураPayload.Вставить("level", payload_level);
	
	action = Новый Структура;
	button = Новый Структура; 
	Если hash = Неопределено Тогда
		action.Вставить("type", type);
		action.Вставить("label", label);
		action.Вставить("payload", СтруктураPayload);  
		button.Вставить("color", color);
	Иначе
		action.Вставить("type", type);
		action.Вставить("hash", hash);
	КонецЕсли; 
	
	button.Вставить("action", action);
	Возврат button;
	
КонецФункции

// функция-утилита для создания одного элемента
Функция СоздатьЭлемент(title, desc, type = "text", label, payload = "1", open = "open_link", photo_id = "-230152621_456239024") Экспорт
    Элемент = Новый Структура;
    //Элемент.Вставить("photo_id", Фото);
    Элемент.Вставить("title", title);
    Элемент.Вставить("description", desc);
	
	Если open = "open_link" Тогда
	    // действия по клику на элемент
	    Действие = Новый Структура;
	    Действие.Вставить("type", "open_link");
	    Действие.Вставить("link", "https://vk.com");
	Иначе                               
		Действие = Новый Структура;
	    Действие.Вставить("type", "open_photo");  
		Элемент.Вставить("photo_id", photo_id); 
	КонецЕсли;
	Элемент.Вставить("action", Действие); 
	

    // кнопки внутри элемента
    Кнопка = Новый Структура;
    ДействиеКнопки = Новый Структура;
    ДействиеКнопки.Вставить("type", type);
    ДействиеКнопки.Вставить("label", label); 
	
	СтруктураPayload = Новый Структура;
	СтруктураPayload.Вставить("button", payload); 
	
	ДействиеКнопки.Вставить("payload", СтруктураPayload); 
	
    Кнопка.Вставить("action", ДействиеКнопки);
	
	МассивКнопок = Новый Массив;
	МассивКнопок.Добавить(Кнопка);
	
    Элемент.Вставить("buttons", МассивКнопок);
    Возврат Элемент;  
	
КонецФункции

