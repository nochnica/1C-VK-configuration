
//Возвращает JSON для template
Функция СформироватьСписокТоваров() Экспорт  
	СписокТоваров = ПолучитьСписокНоменклатуры();
	Элементы = Новый Массив;
	Для каждого Товар Из СписокТоваров Цикл
		Если Товар.Свойство("Наименование") Тогда
		    НаименованиеТовара = ?(ЗначениеЗаполнено(Товар.Наименование), Товар.Наименование, "Без наименования");
		Иначе
		    НаименованиеТовара = "Без наименования";
		КонецЕсли;

		Если Товар.Свойство("Описание") Тогда
		    ОписаниеТовара = ?(ЗначениеЗаполнено(Товар.Описание), Товар.Описание, "Описание есть, товара нет");
		Иначе
		    ОписаниеТовара = "Свойства описание нет";
		КонецЕсли;

		Если Товар.Свойство("Артикул") Тогда
		    АртикулТовара = ?(ЗначениеЗаполнено(Товар.Артикул), Товар.Артикул, "нет_артикула");
		Иначе
		    АртикулТовара = "нет_артикула";
		КонецЕсли;	        
		
		Элементы.Добавить(
		    Клавиатура.СоздатьЭлемент(
			    НаименованиеТовара,    // title
		        ОписаниеТовара,        // description
		        "callback",            // type кнопки
		        "Добавить",            // label кнопки
		        АртикулТовара,         // payload кнопки  
				"open_photo",
				Товар.Фотография
		   )
		);
	КонецЦикла;   
	 
	Карусель = Новый Структура;
	Карусель.Вставить("type", "carousel");
	Карусель.Вставить("elements", Элементы);
	  
	СтрКарусели = VK.СформироватьJSON(Карусель);
	    
    Возврат СтрКарусели;	
КонецФункции                        

Функция ПолучитьКатегорииНоменклатуры() 
	
КонецФункции

// Функция возвращает Массив структур {НаименованиеПолное, Описание, Артикул}
Функция ПолучитьСписокНоменклатуры()
    // 1) Формируем запрос по справочнику Номенклатура и регистру цен
    Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	 | Ном.Ссылка       КАК Ссылка,
	 | Ном.Наименование КАК Наименование,
	 | Ном.Описание     КАК Описание,
	 | Ном.Артикул      КАК Артикул,
	 | Фот.Attachment   КАК Фотография
	 |ИЗ
	 | Справочник.Номенклатура КАК Ном  
	 | ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТоварыФотографии КАК Фот
     |       ПО Ном.Ссылка = Фот.Номенклатура
	 |ГДЕ
	 | Ном.ВидНоменклатуры = &ВидКартины
	 | ИЛИ Ном.ВидНоменклатуры = &ВидУслуги";
		
	Запрос.УстановитьПараметр("ВидКартины", Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Картины"));
	Запрос.УстановитьПараметр("ВидУслуги", Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Услуги"));
	
	// 3) выполняем и перебираем выборку
    Результат = Запрос.Выполнить().Выбрать();
    Список  = Новый Массив;    
	
	Пока Результат.Следующий() Цикл   
		Наименование = ?(СтрДлина(Результат.Наименование) > 80, Лев(Результат.Наименование, 80), Результат.Наименование);  
		Описание = ?(СтрДлина(Результат.Описание) > 80, Лев(Результат.Описание, 80), Результат.Описание);  
		
		Стр = Новый Структура;
		Стр.Вставить("Наименование", Наименование);
		Стр.Вставить("Описание", Описание);
		Стр.Вставить("Артикул", Результат.Артикул);
		Стр.Вставить("Фотография", Результат.Фотография);   
		
		Список.Добавить(Стр);
	КонецЦикла; 
	
    Возврат Список;
КонецФункции

Функция РазбитьНаСтраницы(СписокТоваров)
	
КонецФункции
