
Функция СформироватьКлавиатуру(payload = Неопределено, from_id = "", msg = "") Экспорт 
	ДанныеВозврата = Новый Структура;
	message = "Это дефолтный текст";
	buttons = СформироватьГлавноеМеню(from_id);  
		
	Если payload <> Неопределено Тогда 
		Если payload = "catalog" Тогда 
		    message = "Выберите товар:"; 
			СтрКарусели = Каталог.СформироватьСписокТоваров();
		    ДанныеВозврата.Вставить("template", СтрКарусели); 
		ИначеЕсли payload = "cart" Тогда
			message = Заказы.ПолучитьТекстКорзины(from_id);  
			buttons = СформироватьМенюКорзины();				
		ИначеЕсли payload = "FAQ" Тогда
			message = "Это текст для FAQ";  
		ИначеЕсли payload = "order" Тогда
			message =  "Введите email:"; 
			ОжиданиеEmail(from_id); 
		ИначеЕсли payload = "orders" Тогда
			message = Заказы.ПолучитьТекстЗаказов(from_id);
		КонецЕсли;
	Иначе     
		Ссылка = Справочники.СостоянияПользователей.НайтиПоРеквизиту("Пользователь", Строка(from_id));
		
		Если ЗначениеЗаполнено(Ссылка) Тогда
			Состояние = Ссылка.ПолучитьОбъект(); 
			Если Состояние.Ожидаем Тогда
				message = "Спасибо, мы свяжемся с вами по email!";
				ОжиданиеEmail(from_id, msg);         
			КонецЕсли;
        КонецЕсли;
			
   	КонецЕсли;                        
	
	ДанныеВозврата.Вставить("keyboard", СформироватьJSONКлавиатуры(buttons));
	ДанныеВозврата.Вставить("message", message);
	
	Возврат ДанныеВозврата;

КонецФункции    

Функция СформироватьГлавноеМеню(from_id = "")
	buttons = Новый Массив; 
	
	РядКнопок = Новый Массив;
	РядКнопок.Добавить(СформироватьКнопку("Каталог", "catalog", 1));
	buttons.Добавить(РядКнопок); 
	
	РядКнопок = Новый Массив;
	РядКнопок.Добавить(СформироватьКнопку("Корзина", "cart", 1));
	buttons.Добавить(РядКнопок); 
	
	РядКнопок = Новый Массив;
	РядКнопок.Добавить(СформироватьКнопку("FAQ", "FAQ", 1));
	buttons.Добавить(РядКнопок);
	
	РядКнопок = Новый Массив;
	РядКнопок.Добавить(СформироватьКнопку("Заказы", "orders", 1));
	buttons.Добавить(РядКнопок);
	
	Возврат buttons;
КонецФункции    

Функция СформироватьМенюКорзины()
	buttons = Новый Массив; 
	
	РядКнопок = Новый Массив;
	РядКнопок.Добавить(СформироватьКнопку("Оформить заказ", "order", 2));
	buttons.Добавить(РядКнопок); 
	
	РядКнопок = Новый Массив;
	РядКнопок.Добавить(СформироватьКнопку("Назад", "back", 2));
	buttons.Добавить(РядКнопок); 
	
	Возврат buttons;
	
КонецФункции 

Функция СформироватьКнопку(label = "Test", payload_button, payload_level, color = "default", type = "text")
    СтруктураPayload = Новый Структура;
	СтруктураPayload.Вставить("button", payload_button);
	СтруктураPayload.Вставить("level", payload_level); 
	
	//payload = VK.СформироватьJSON(СтруктураPayload);
	
	action = Новый Структура;
	action.Вставить("type", type);
	action.Вставить("label", label);
	action.Вставить("payload", СтруктураPayload);
	
	button = Новый Структура;
	button.Вставить("action", action);
	button.Вставить("color", color); 
	
	Возврат button;
	
КонецФункции  

//Вот примерно так выглядит JSON файл клавиатуры
//{
//  "one_time": false,
//  "buttons":[
//    [
//      {
//        "action":{
//          "type":"location",
//          "payload":"{\"button\": \"1\"}"
//        }
//      }
//    ],
//    [
//      {
//        "action":{
//          "type":"vkpay",
//          "hash":"action=transfer-to-group&group_id=12345&aid=10"
//        }
//      }
//    ],
//    [
//      {
//        "action":{
//          "type":"text",
//          "payload":"{\"button\": \"1\"}",
//          "label":"Red"
//        },
//        "color":"negative"
//      },
//      {
//        "action":{
//          "type":"text",
//          "payload":"{\"button\": \"2\"}",
//          "label":"Green"
//        },
//        "color":"positive"
//      },
//      {
//        "action":{
//          "type":"text",
//          "payload":"{\"button\": \"2\"}",
//          "label":"Blue"
//        },
//        "color":"primary"
//      },
//      {
//        "action":{
//          "type":"text",
//          "payload":"{\"button\": \"2\"}",
//          "label":"White"
//        },
//        "color":"secondary"
//      }
//    ]
//  ]
//}
Функция СформироватьJSONКлавиатуры(buttons, inline = false)
    keyboard = Новый Структура;
	keyboard.Вставить("one_time", false);
	keyboard.Вставить("buttons", buttons);  	
	keyboard.Вставить("inline", inline);
	
	keyboardJSON = VK.СформироватьJSON(keyboard);
	
	Возврат keyboardJSON;
КонецФункции  

// функция-утилита для создания одного элемента
Функция СоздатьЭлемент(title, desc, type = "text", label, payload = "1", open = "open_link", photo_id = "photo-230152621_456239020") Экспорт
    Элемент = Новый Структура;
    //Элемент.Вставить("photo_id", Фото);
    Элемент.Вставить("title", title);
    Элемент.Вставить("description", desc);
	
	Если open = "open_link" Тогда
	    // действия по клику на элемент
	    Действие = Новый Структура;
	    Действие.Вставить("type", "open_link");
	    Действие.Вставить("link", "https://vk.com");
	Иначе                               
		Действие = Новый Структура;
	    Действие.Вставить("type", "open_photo");  
		Элемент.Вставить("photo_id", photo_id); 
	КонецЕсли;
	Элемент.Вставить("action", Действие); 
	

    // кнопки внутри элемента
    Кнопка = Новый Структура;
    ДействиеКнопки = Новый Структура;
    ДействиеКнопки.Вставить("type", type);
    ДействиеКнопки.Вставить("label", label); 
	
	СтруктураPayload = Новый Структура;
	СтруктураPayload.Вставить("button", payload); 
	
	ДействиеКнопки.Вставить("payload", СтруктураPayload); 
	
    Кнопка.Вставить("action", ДействиеКнопки);
	
	МассивКнопок = Новый Массив;
	МассивКнопок.Добавить(Кнопка);
	
    Элемент.Вставить("buttons", МассивКнопок);
    Возврат Элемент;  
	
КонецФункции

Процедура ОжиданиеEmail(from_id, email = Неопределено)
	Ссылка = Справочники.СостоянияПользователей.НайтиПоРеквизиту("Пользователь", Строка(from_id));   
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		Состояние = Ссылка.ПолучитьОбъект();
	Иначе
		Состояние = Справочники.СостоянияПользователей.СоздатьЭлемент();    
		Состояние.Пользователь = from_id;
	КонецЕсли;
	
	Если email = Неопределено Тогда
		Состояние.Ожидаем = Истина; 
	Иначе           
		Состояние.Email = email;
		Состояние.Ожидаем = Ложь;    
		
		Заказы.СоздатьЗаказ(from_id, email);
	КонецЕсли;     
	
	Состояние.Записать();  	
КонецПроцедуры