
Функция СформироватьКлавиатуру(text = "", level = 0, from_id = "") Экспорт 
	ДанныеВозврата = Новый Структура;
	message = "Нихрена не прилетает блять";
	buttons = СформироватьГлавноеМеню();
	
	Если text = "catalog" Тогда 
	    message = "Выберите товар:";
	    СписокТоваров = ПолучитьСписокНоменклатуры();
	 
	    Элементы = Новый Массив;
	    Для каждого Товар Из СписокТоваров Цикл
	        Если Товар.Свойство("Наименование") Тогда
			    НаименованиеТовара = ?(ЗначениеЗаполнено(Товар.Наименование), Товар.Наименование, "Без наименования");
			Иначе
			    НаименованиеТовара = "Без наименования";
			КонецЕсли;

			Если Товар.Свойство("Описание") Тогда
			    ОписаниеТовара = ?(ЗначениеЗаполнено(Товар.Описание), Товар.Описание, "Описание отсутствует");
			Иначе
			    ОписаниеТовара = "Описание отсутствует";
			КонецЕсли;

			Если Товар.Свойство("Артикул") Тогда
			    АртикулТовара = ?(ЗначениеЗаполнено(Товар.Артикул), Товар.Артикул, "нет_артикула");
			Иначе
			    АртикулТовара = "нет_артикула";
			КонецЕсли;	        
			Элементы.Добавить(
	            СоздатьЭлемент(
	                НаименованиеТовара,    // title
	                ОписаниеТовара,        // description
	                "text",                // type кнопки
	                "Добавить",            // label кнопки
	                АртикулТовара           // payload кнопки
	            )
	        );
	    КонецЦикла;   
	 
	    Карусель = Новый Структура;
	    Карусель.Вставить("type", "carousel");
	    Карусель.Вставить("elements", Элементы);
	  
	    СтрКарусели = VK.СформироватьJSON(Карусель);
	    ДанныеВозврата.Вставить("template", СтрКарусели); 
		
		//message = СтрКарусели;
	ИначеЕсли text = "orders" Тогда
		message = "Это текст для Заказов";
	ИначеЕсли text = "FAQ" Тогда
		message = "Это текст для FAQ";
	Иначе
		message = "Это дефолтный текст";
	КонецЕсли;                        
	
	ДанныеВозврата.Вставить("keyboard", СформироватьJSONКлавиатуры(buttons));
	ДанныеВозврата.Вставить("message", message);
	
	Возврат ДанныеВозврата;

КонецФункции   

Функция СформироватьГлавноеМеню()
	buttons = Новый Массив; 
	
	РядКнопок = Новый Массив;
	РядКнопок.Добавить(СформироватьКнопку("Каталог", "catalog", 1));
	buttons.Добавить(РядКнопок); 
	
	РядКнопок = Новый Массив;
	РядКнопок.Добавить(СформироватьКнопку("Заказы", "orders", 1));
	buttons.Добавить(РядКнопок); 
	
	РядКнопок = Новый Массив;
	РядКнопок.Добавить(СформироватьКнопку("FAQ", "FAQ", 1));
	buttons.Добавить(РядКнопок);
	
	Возврат buttons;
	
КонецФункции  

// Разобраться как формировать payload
Функция СформироватьКнопку(label = "Test", payload_button, payload_level, color = "default", type = "text")
    СтруктураPayload = Новый Структура;
	СтруктураPayload.Вставить("button", payload_button);
	СтруктураPayload.Вставить("level", payload_level); 
	
	//payload = VK.СформироватьJSON(СтруктураPayload);
	
	action = Новый Структура;
	action.Вставить("type", type);
	action.Вставить("label", label);
	action.Вставить("payload", СтруктураPayload);
	
	button = Новый Структура;
	button.Вставить("action", action);
	button.Вставить("color", color); 
	
	Возврат button;
	
КонецФункции  

//Вот примерно так выглядит JSON файл клавиатуры
//{
//  "one_time": false,
//  "buttons":[
//    [
//      {
//        "action":{
//          "type":"location",
//          "payload":"{\"button\": \"1\"}"
//        }
//      }
//    ],
//    [
//      {
//        "action":{
//          "type":"vkpay",
//          "hash":"action=transfer-to-group&group_id=12345&aid=10"
//        }
//      }
//    ],
//    [
//      {
//        "action":{
//          "type":"text",
//          "payload":"{\"button\": \"1\"}",
//          "label":"Red"
//        },
//        "color":"negative"
//      },
//      {
//        "action":{
//          "type":"text",
//          "payload":"{\"button\": \"2\"}",
//          "label":"Green"
//        },
//        "color":"positive"
//      },
//      {
//        "action":{
//          "type":"text",
//          "payload":"{\"button\": \"2\"}",
//          "label":"Blue"
//        },
//        "color":"primary"
//      },
//      {
//        "action":{
//          "type":"text",
//          "payload":"{\"button\": \"2\"}",
//          "label":"White"
//        },
//        "color":"secondary"
//      }
//    ]
//  ]
//}
Функция СформироватьJSONКлавиатуры(buttons, inline = false)
    keyboard = Новый Структура;
	keyboard.Вставить("one_time", false);
	keyboard.Вставить("buttons", buttons);  	
	keyboard.Вставить("inline", inline);
	
	keyboardJSON = VK.СформироватьJSON(keyboard);
	
	Возврат keyboardJSON;
КонецФункции  

Функция СформироватьКарусель();   
	elements = СформироватьЭлементыКарусели();
	ДанныеВозврата = Новый Структура;
	ДанныеВозврата.Вставить("type", "carousel");
	ДанныеВозврата.Вставить("elements", elements);
 
    Возврат VK.СформироватьJSON(ДанныеВозврата);
КонецФункции

Функция СформироватьЭлементыКарусели()
    Элементы = Новый Массив;
	
	// Добавляем элементы в массив
	Элементы.Добавить(СоздатьЭлемент("Заголовок 1", "Описание 1", , "Кнопка 1", "btn1"));
	Элементы.Добавить(СоздатьЭлемент("Заголовок 2","Описание 2", , "Кнопка 2", "btn2"));

	Возврат Элементы;
КонецФункции  

// функция-утилита для создания одного элемента
Функция СоздатьЭлемент(title, desc, type = "text", label, payload)
    Элемент = Новый Структура;
    //Элемент.Вставить("photo_id", Фото);
    Элемент.Вставить("title", title);
    Элемент.Вставить("description", desc);

    // действия по клику на элемент
    Действие = Новый Структура;
    Действие.Вставить("type", "open_link");
    Действие.Вставить("link", "https://vk.com");
    Элемент.Вставить("action", Действие);

    // кнопки внутри элемента
    Кнопка = Новый Структура;
    ДействиеКнопки = Новый Структура;
    ДействиеКнопки.Вставить("type", type);
    ДействиеКнопки.Вставить("label", label); 
	
	payload = Новый Структура;
	payload.Вставить("button", "1"); 
	
	ДействиеКнопки.Вставить("payload", payload); 
	
    Кнопка.Вставить("action", ДействиеКнопки);
	
	МассивКнопок = Новый Массив;
	МассивКнопок.Добавить(Кнопка);
	
    Элемент.Вставить("buttons", МассивКнопок);
    Возврат Элемент;  
	
КонецФункции

// Функция возвращает Массив структур {НаименованиеПолное, Описание, Артикул}
Функция ПолучитьСписокНоменклатуры()
    // 1) Формируем запрос по справочнику Номенклатура и регистру цен
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ ПЕРВЫЕ 5
    |  Ном.Ссылка           КАК Ссылка,
    |  Ном.Наименование     КАК Наименование,
    |  Ном.Описание         КАК Описание,
    |  Ном.Артикул          КАК Артикул
    |ИЗ
    |  Справочник.Номенклатура КАК Ном";
	
    // 3) выполняем и перебираем выборку
    Результат = Запрос.Выполнить().Выбрать();
    Список  = Новый Массив;    
	
	Пока Результат.Следующий() Цикл
        Стр = Новый Структура(
          "Наименование",       Результат.Наименование,
          "Описание",           Результат.Описание,
          "Артикул",            Результат.Артикул
        );
        Список.Добавить(Стр);
    КонецЦикла;

    Возврат Список;
КонецФункции

