	
#Область Переопределяемые

Функция ПолучитьAccessToken()
	Возврат "vk1.a.A64YqTgIedBRS3w2P5XGGYTwsEaDyijLMDDk3B4d7ONYOfQUf2FiJCASwICmK76txGaU92M7_504ozqjinb3Ofktz741cgiXEyNxymUYgI0OwKjjo11pjfL9LOjL6g1xIQW4MGfLdQPnYm2NfQWv1Lrgd-u4zPPxlEmNWVR-1D0ymb6MAw4Dl7VDNs89_ANCVSVk6IKK596Is0Yjaixxew";
КонецФункции

&НаСервере
Функция ПолучитьПутьКФайлуЛога()
	Возврат "C:\Users\hellawes\desktop\1CVKlog.txt";	
КонецФункции

#КонецОбласти



#Область СлужебныеПроцедурыИФункции  
   
&НаСервере
Функция ЗаписатьЛог(Данные) Экспорт 
	
	Попытка    
		
		ИмяФайлаЛога = ПолучитьПутьКФайлуЛога();
		ФайлЛога = Новый Файл(ИмяФайлаЛога);
		
		ТекстовыйДокумент = Новый ТекстовыйДокумент;
		
		Если НЕ ФайлЛога.Существует() Тогда
			ТекстовыйДокумент.ДобавитьСтроку(Данные);
		Иначе
			ТекстовыйДокумент.Прочитать(ИмяФайлаЛога);
			ТекстовыйДокумент.ДобавитьСтроку(Данные);
		КонецЕсли;
		
		ТекстовыйДокумент.ЗаменитьСтроку(ИмяФайлаЛога);
		
	Исключение
	КонецПопытки;        
КонецФункции 

Функция ОбработатьJSON(СтрокаJSON) Экспорт  
	СтруктураВозврата = Новый Структура;
	
	Попытка 
		Чтение = Новый ЧтениеJSON;
		Чтение.УстановитьСтроку(СтрокаJSON);
		СтруктураВозврата = ПрочитатьJSON(Чтение);
	Исключение
	КонецПопытки;
	
	Возврат СтруктураВозврата;	
КонецФункции   

Функция СформироватьJSON(СтруктураДанных, ФормироватьСПереносами = Ложь) Экспорт
	ЗаписьJSON = Новый ЗаписьJSON;
	Если ФормироватьСПереносами Тогда
		ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(, Символы.Таб));
	Иначе
		ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, Символы.Таб));
	КонецЕсли;
	
	НастройкаСериализацииJSON = Новый НастройкиСериализацииJSON;
	НастройкаСериализацииJSON.ВариантЗаписиДаты = ВариантЗаписиДатыJSON.ЛокальнаяДатаСоСмещением;
	НастройкаСериализацииJSON.ФорматСериализацииДаты = ФорматДатыJSON.ISO;
	
	ЗаписатьJSON(ЗаписьJSON, СтруктураДанных, НастройкаСериализацииJSON);
	
	Возврат ЗаписьJSON.Закрыть();	
КонецФункции

Функция СформироватьМетод(ПараметрыЗапроса) Экспорт
	Стр = "";
	ПараметрыМетода = "";
	
	Для каждого Строка Из ПараметрыЗапроса["parameters"] Цикл
		ПараметрыМетода = ПараметрыМетода + Строка + "&";	
	КонецЦикла;
	
	Стр = "/method/" + ПараметрыЗапроса["method"] + "?" + ПараметрыМетода;
	Стр = Стр + "access_token=" + ПараметрыЗапроса["access_token"] + "&v=5.199";
	
	Возврат Стр;	
КонецФункции

#КонецОбласти



#Область ВходящиеСообщения

&НаСервере
Процедура ОбработатьСообщениеИзВК(Запрос, Ответ) Экспорт
	СтрокаJSON = Запрос.ПолучитьТелоКакСтроку(); 
	ЗаписатьЛог(СтрокаJSON);
	
	СтруктураДанных = ОбработатьJSON(СтрокаJSON);
	ОбработатьВходящееСообщение(СтруктураДанных, Ответ);
	//Ответ.УстановитьТелоИзСтроки("Ничего не отправляется", "UTF-8");
КонецПроцедуры

&НаСервере
Процедура ОбработатьВходящееСообщение(СтруктураДанных, Ответ) 
	Если СтруктураДанных.Свойство("type") И СтруктураДанных.type = "confirmation" Тогда
		Ответ.УстановитьТелоИзСтроки("61172d7c", "UTF-8");
	ИначеЕсли СтруктураДанных.Свойство("type") И СтруктураДанных.type = "message_new" Тогда    
		Если СтруктураДанных.Свойство("object") Тогда  
			Попытка      
				ОбъектСообщение = СтруктураДанных.object.message;   
				random_id = Формат(ОбъектСообщение.random_id, "ЧРГ=''; ЧГ=0");
				peer_id   = Формат(ОбъектСообщение.peer_id, "ЧРГ=''; ЧГ=0");   
				group_id  = Формат(СтруктураДанных.group_id, "ЧРГ=''; ЧГ=0");
				from_id   = Формат(ОбъектСообщение.from_id, "ЧРГ=''; ЧГ=0");
				
				message_send(random_id, peer_id, "hi from 1c", group_id);
				Ответ.УстановитьТелоИзСтроки("ok", "UTF-8");
			Исключение
				ЗаписатьЛог(ОписаниеОшибки());    
				Ответ.УстановитьТелоИзСтроки(ОписаниеОшибки(), "UTF-8");
			КонецПопытки;
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

#КонецОбласти



#Область МетодыAPI

&НаСервере
Функция message_send(random_id = Неопределено, peer_id = Неопределено, 
					  message = Неопределено, group_id = Неопределено, keyboard = Неопределено) Экспорт
					  
	parameters = Новый Массив;
	Если НЕ random_id = Неопределено Тогда
		parameters.Добавить("random_id=" + random_id);
	КонецЕсли;
	Если НЕ peer_id = Неопределено Тогда
		parameters.Добавить("peer_id=" + peer_id);		
	КонецЕсли;
	Если НЕ message = Неопределено Тогда
		parameters.Добавить("message=" + message);		
	КонецЕсли;
	Если НЕ group_id = Неопределено Тогда
		parameters.Добавить("group_id=" + group_id);		
	КонецЕсли;
	Если НЕ keyboard = Неопределено Тогда
		parameters.Добавить("keyboard=" + keyboard);		
	КонецЕсли;	
	
	ОтправитьЗапросВVK(ПолучитьAccessToken(), "messages.send", parameters);
	
КонецФункции

#КонецОбласти



#Область ИсходящиеСообщения

//Функция ОтправитьЗапросВVK(access_token, method, parameters) Экспорт
//	Результат = "";   
//	
//	ssl = Новый ЗащищенноеСоединениеOpenSSL();
//	СоединениеHTTP = Новый HTTPСоединение("https://api.vk.com", 443,,,, 10, ssl, Ложь);
//	ПараметрыЗапроса = Новый Соответствие;
//	ПараметрыЗапроса.Вставить("access_token", access_token);
//	ПараметрыЗапроса.Вставить("method", method);
//	ПараметрыЗапроса.Вставить("parameters", parameters);
//	
//	HTTPЗапрос = Новый HTTPЗапрос;
//	HTTPЗапрос.АдресРесурса = СформироватьМетод(ПараметрыЗапроса);
//	
//	РезультатЗапрос = СоединениеHTTP.Получить(HTTPЗапрос);
//	Результат = СформироватьJSON(ОбработатьJSON(РезультатЗапрос.ПолучитьТелоКакСтроку()));
//	
//	ЗаписатьЛог(Результат);
//	
//	Возврат Результат;
//КонецФункции

&НаСервере
Функция ОтправитьЗапросВVK(access_token, method, parameters) Экспорт
    Результат = "";   

    Попытка
        ssl = Новый ЗащищенноеСоединениеOpenSSL();
        // Исправлен порт на 443
        СоединениеHTTP = Новый HTTPСоединение("api.vk.com", 443,,,, 10, ssl, Ложь);
        
        // Сформировать параметры строки
        ПараметрыМетода = "";
        Для каждого Строка Из parameters Цикл
            ПараметрыМетода = ПараметрыМетода + Строка + "&";
        КонецЦикла;

        ПолныйАдрес = "method/" + method + "?" + ПараметрыМетода +
                      "access_token=" + access_token + "&v=5.199";

        ЗаписатьЛог("URL запроса в VK: https://api.vk.com/" + ПолныйАдрес);

        HTTPЗапрос = Новый HTTPЗапрос;
        HTTPЗапрос.АдресРесурса = ПолныйАдрес;

        РезультатЗапрос = СоединениеHTTP.Получить(HTTPЗапрос);

        // Ответ сервера VK — логируем сырой текст
        СыроеТело = РезультатЗапрос.ПолучитьТелоКакСтроку();
        ЗаписатьЛог("Сырой ответ от VK: " + СыроеТело);

        // Пробуем разобрать JSON
        Результат = СформироватьJSON(ОбработатьJSON(СыроеТело));

    Исключение
        ЗаписатьЛог("ОШИБКА при обращении к VK: " + ОписаниеОшибки());
    КонецПопытки;

    Возврат Результат;
КонецФункции


#КонецОбласти
 